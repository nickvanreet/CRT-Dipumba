name: R Project CI

on:
  push:
  pull_request:

jobs:
  ci:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      RENV_CONFIG_WIDGETS_ENABLED: FALSE

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: 'release'
          use-public-rspm: true

      - uses: r-lib/actions/setup-pandoc@v2

      # 1) SYSTEEM-DEPS EERST (voor pak / curl / sf / stringi)
      - name: Install system libraries
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libcurl4-openssl-dev libssl-dev libxml2-dev pkg-config \
            libicu-dev \
            libfontconfig1-dev libharfbuzz-dev libfribidi-dev \
            libfreetype6-dev libpng-dev libtiff5-dev libjpeg-dev \
            libudunits2-dev libgdal-dev libgeos-dev libproj-dev gdal-bin

      # 2) Dependencies herstellen
      # Gebruik renv als je een renv.lock hebt
      - name: Restore deps with renv (if present)
        if: ${{ hashFiles('renv.lock') != '' }}
        uses: r-lib/actions/setup-renv@v2

      # Anders: val terug op pak (nu m√©t curl headers aanwezig)
      - name: Install deps with pak (fallback)
        if: ${{ hashFiles('renv.lock') == '' }}
        run: |
          Rscript -e 'install.packages("pak", repos="https://cloud.r-project.org")'
          Rscript -e 'pak::pak(c("shiny","tidyverse","readxl","janitor","lubridate","DT","sf","leaflet","stringi"))'

      # Optioneel: lint
      - name: Lint (optional)
        run: |
          Rscript -e 'if (!requireNamespace("lintr", quietly=TRUE)) install.packages("lintr"); lintr::lint_dir()'

      # 3) Rooktest van je project (geen DESCRIPTION nodig)
      - name: Smoke test
        run: |
          test -f app.R && Rscript -e 'source("app.R"); message("Loaded app.R ok.")' || echo "No app.R, skipping"
