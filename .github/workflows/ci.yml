name: R Project CI

on:
  push:
  pull_request:

jobs:
  ci:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      RENV_CONFIG_WIDGETS_ENABLED: FALSE

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: 'release'
          use-public-rspm: true

      - uses: r-lib/actions/setup-pandoc@v2

      - name: Install system libraries
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libcurl4-openssl-dev libssl-dev libxml2-dev pkg-config \
            libicu-dev \
            libfontconfig1-dev libharfbuzz-dev libfribidi-dev \
            libfreetype6-dev libpng-dev libtiff5-dev libjpeg-dev \
            libudunits2-dev libgdal-dev libgeos-dev libproj-dev gdal-bin

      # Gebruik renv als aanwezig, anders pak
      - name: Restore deps with renv (if present)
        if: ${{ hashFiles('renv.lock') != '' }}
        uses: r-lib/actions/setup-renv@v2

      - name: Install deps with pak (fallback)
        if: ${{ hashFiles('renv.lock') == '' }}
        run: |
          Rscript -e 'install.packages("pak", repos="https://cloud.r-project.org")'
          Rscript -e 'pak::pak(c("shiny","tidyverse","readxl","janitor","lubridate","DT","sf","leaflet","stringi","testthat","lintr"))'

      - name: Lint (optional)
        run: |
          Rscript -e 'if (!requireNamespace("lintr", quietly=TRUE)) install.packages("lintr"); lintr::lint_dir()' || true

      - name: Unit tests (if tests/ exists)
        run: |
          if [ -d "tests" ]; then Rscript -e 'if (!requireNamespace("testthat", quietly=TRUE)) install.packages("testthat"); testthat::test_dir("tests", reporter="summary")'; fi

      - name: Smoke test app.R (if present)
        run: |
          if [ -f "app.R" ]; then Rscript -e 'source("app.R"); message("Loaded app.R ok.")'; else echo "No app.R, skipping"; fi

      # Verzamel nuttige artifacts (logs, png, html, etc.)
      - name: Collect outputs (optional)
        run: |
          mkdir -p check
          find . -maxdepth 2 -type f \( -name "*.html" -o -name "*.pdf" -o -name "*.png" -o -name "*.csv" -o -name "*.xlsx" -o -name "*.rds" \) -print -exec cp {} check/ \; || true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: outputs
          path: check
          if-no-files-found: ignore
